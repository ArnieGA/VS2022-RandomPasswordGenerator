<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RandomPasswordGenerator</name>
    </assembly>
    <members>
        <member name="T:RandomPasswordGenerator.Configuration.ApplicationInformation">
            <summary>Represents information about the application.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Configuration.ApplicationInformation._fileVersionInfo">
            <summary>Holds the entire file version information of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Author">
            <summary>Gets the author of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Company">
            <summary>Gets the company of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Copyright">
            <summary>Gets the copyright of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Version">
            <summary>Gets the version of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.VersionInfo">
            <summary>Gets the version information of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Name">
            <summary>Gets the name of the application.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.ApplicationInformation.Description">
            <summary>Gets the description of the application.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Configuration.ApplicationInformation.#ctor(System.Reflection.Assembly)">
            <summary>Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Configuration.ApplicationInformation"/> class.</summary>
        </member>
        <member name="T:RandomPasswordGenerator.Configuration.AuthorAttribute">
            <summary>An attribute to set the assembly's author name.</summary>
            <seealso cref="T:System.Attribute"/>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.AuthorAttribute.FullName">
            <summary>Gets the name.</summary>
            <value>The author's name.</value>
        </member>
        <member name="M:RandomPasswordGenerator.Configuration.AuthorAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Configuration.AuthorAttribute"/> class.</summary>
            <param name="fullName">The full name.</param>
        </member>
        <member name="T:RandomPasswordGenerator.Configuration.RegistryKeys">
            <summary>
            Provides an abstract way of getting/setting configuration values from/to the registry.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.AllowedDigits">
            <summary>Gets or sets the allowed digits registry value.</summary>
            <value>
            A string containing a collection of digits that the user has chosen to use in the
            character base for the password generator.
            </value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.AllowedLowercase">
            <summary>Gets or sets the allowed lowercase letters registry value.</summary>
            <value>
            A string containing a collection of lowercase letters that the user has chosen to use in
            the character base for the password generator.
            </value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.AllowedSpecialCharacters">
            <summary>Gets or sets the allowed special characters registry value.</summary>
            <value>
            A string containing a collection of special characters that the user has chosen to use
            in the character base for the password generator.
            </value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.AllowedUppercase">
            <summary>Gets or sets the allowed uppercase registry value.</summary>
            <value>
            A string containing a collection of uppercase letters that the user has chosen to use in
            the character base for the password generator.
            </value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.IncludeDigits">
            <summary>
            Gets or sets the <c>IncludeDigits</c> registry value. This value represents whether to
            include digits in the generated password.
            </summary>
            <value><c>true</c> if [include digits]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.IncludeLetters">
            <summary>
            Gets or sets the <c>IncludeLetters</c> registry value. This value represents whether to
            include letters in the generated password.
            </summary>
            <value><c>true</c> if [include letters]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.IncludeSpecialCharacters">
            <summary>
            Gets or sets the <c>IncludeSpecialCharacters</c> registry value. This value represents
            whether to include special characters in the generated password.
            </summary>
            <value><c>true</c> if [include special characters]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.LetterCasing">
            <summary>Gets or sets the letter casing registry value.</summary>
            <value>
            A value that represents the letter casing the user has chosen for the generated
            password. <br/><i>UpperLower</i> = Both upper and lower case. <br/><i>LowerOnly</i> =
            Lowercase only. <i>UpperOnly</i> = Uppercase only
            </value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.MinimumLength">
            <summary>Gets or sets the minimum length registry key.</summary>
            <value>A number that represents the minimum length allowed for the generated password.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.MinimumNumericLength">
            <summary>Gets or sets the minimum numeric length registry value.</summary>
            <value>A number that represents the minimum length allowed for numeric-only passwords.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.ResultLength">
            <summary>Gets or set the result length registry value.</summary>
            <value>A number that represents the length chosen by the user for the generated password.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Configuration.RegistryKeys.ShuffleTimes">
            <summary>Gets or sets the shuffle times registry value.</summary>
            <value>A number that represents the times the generator will shuffle characters.</value>
        </member>
        <member name="T:RandomPasswordGenerator.Core.Constants">
            <summary>Provides constant values that can be accessed solution-wide.</summary>
        </member>
        <member name="T:RandomPasswordGenerator.Core.PasswordGenerator">
            <summary>This is a tool class that handles password generation.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.ConfiguredLength">
            <summary>The configured result's length.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.GeneratedPassword">
            <summary>The last generated password.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.IncludeDigits">
            <summary>The configured setting for whether to include digits when generating a password.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.IncludeLetters">
            <summary>
            The configured setting for whether to include letters when generating a password.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.IncludeSpecialCharacters">
            <summary>
            The configured setting for whether to include special characters when generating a password.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.IsOptionStateInvalid">
            <summary>
            Gets a value indicating whether configured options are in a valid state. For example,
            setting all flags to false (include digits, include letters, include special characters)
            will leave this instance in an invalid options state. You can use this value to help you
            configure UI states.
            </summary>
            <value><c>true</c> if this instance is option state invalid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.IsPasswordGenerated">
            <summary>
            Gets a value that represents whether a password has been generated, or it has been reset.
            </summary>
            <value><c>true</c> if a password has been generated and set; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.LetterCasing">
            <summary>Gets the configured letter casing. <br/><seealso cref="T:ROCFramework_Core.Enums.LetterCasingOptions"/></summary>
            <value>The letter casing.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.PotentialMaximumLength">
            <summary>
            Calculates and gets the maximum possible length based on the current generator settings.
            </summary>
            <value>The maximum possible length.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.PotentialMinimumLength">
            <summary>
            Calculates and gets the minimum possible length based on the current generator settings.
            </summary>
            <value>The minimum possible length.</value>
        </member>
        <member name="P:RandomPasswordGenerator.Core.PasswordGenerator.SelectedSpecialCharacters">
            <summary>Gets the user-selected special characters.</summary>
            <value>The selected special characters.</value>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator._defaultOptions">
            <summary>
            Represents the original <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> object used to create this
            instance. The <see cref="M:RandomPasswordGenerator.Core.PasswordGenerator.ResetOptions"/> method can be called to reset the options of
            this instance back to the original options.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator._baseCharacters">
            <summary>
            The character base that will be used to generate the random password. It is generated in
            the <see cref="M:RandomPasswordGenerator.Core.PasswordGenerator.SetBaseCharacters"/> method.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator._generatedPassword">
            <summary>Holds the generated password.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator._options">
            <summary>
            Represents the mutable <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> object that can be modified.
            It differs from the <see cref="F:RandomPasswordGenerator.Core.PasswordGenerator._defaultOptions"/> in that it allows changes to its properties.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.DEFAULT_DIGITS">
            <summary>The default set of digits.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.DEFAULT_LOWERCASE">
            <summary>The default set of lowercase letters.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.DEFAULT_SPECIAL">
            <summary>The default set of special characters.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.DEFAULT_UPPERCASE">
            <summary>The default set of uppercase letters.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.MINIMUM_NUMERIC_PASSWORD_LENGTH">
            <summary>The minimum length required for a numeric password: 1.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Core.PasswordGenerator.MINIMUM_PASSWORD_LENGTH">
            <summary>The minimum length required for a password: 6.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.#ctor(RandomPasswordGenerator.Core.RandomGeneratorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Core.PasswordGenerator"/> class with optional
            custom options.
            </summary>
            <param name="options">
            The <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> used to customize password generation. If null,
            default options will be used with a default result length of 15 characters.
            </param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.Randomize(System.String)">
            <summary>
            Generates a randomized string based on the input value. It performs the 2nd layer of
            character randomness in the algorithm.
            </summary>
            <param name="value">The input string.</param>
            <returns>A randomized string.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetBaseCharacters">
            <summary>Sets the base characters for generating the password.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.ValidateDigits(System.Char[])">
            <summary>Validates the presence of digits in the character array.</summary>
            <param name="value">The character array to validate.</param>
            <returns>True if the validation is successful, otherwise false.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.ValidateLetters(System.Char[],ROCFramework_Core.Enums.LetterCasingOptions)">
            <summary>Validates the presence of letters in the character array.</summary>
            <param name="value">The character array to validate.</param>
            <param name="casing">The letter casing option.</param>
            <returns>True if the validation is successful, otherwise false.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.ValidateSpecialCharacters(System.Char[])">
            <summary>Validates the presence of special characters in the character array.</summary>
            <param name="value">The character array to validate.</param>
            <returns>True if the validation is successful, otherwise false.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.OnAfterPasswordGenerated(System.String)">
            <summary>Invokes the callback after a password has been generated.</summary>
            <param name="generatedPassword">The generated password.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.OnBeforePasswordGenerated">
            <summary>Invokes the callback before generating a password.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.OnPasswordGenerationException(System.Exception)">
            <summary>Invokes the callback when an exception occurs during password generation.</summary>
            <param name="exception">The exception that occurred.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.OnPasswordReset">
            <summary>Invokes the callback when resetting the password.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.GeneratePassword">
            <summary>Generates the password.</summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.ResetOptions">
            <summary>Resets the options to the default values.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.ResetPassword">
            <summary>Resets the generated password and invokes the password reset callback.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetAllowedSpecialCharacters(System.String)">
            <summary>Sets the allowed special characters for password generation.</summary>
            <param name="specialCharacters">The string containing special characters.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetIncludeDigits(System.Boolean)">
            <summary>Sets whether to include digits in password generation.</summary>
            <param name="include">True to include digits, false otherwise.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetIncludeLetters(System.Boolean)">
            <summary>Sets whether to include letters in password generation.</summary>
            <param name="include">True to include letters, false otherwise.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetIncludeSpecialCharacters(System.Boolean)">
            <summary>Sets whether to include special characters in password generation.</summary>
            <param name="include">True to include special characters, false otherwise.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetLetterCasing(ROCFramework_Core.Enums.LetterCasingOptions)">
            <summary>Sets the letter casing option for password generation.</summary>
            <param name="letterCasing">The letter casing option.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetOnAfterPasswordGeneratedEvent(System.Action{System.String})">
            <summary>Sets the callback action to be invoked after a password has been generated.</summary>
            <param name="action">The callback action.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetOnBeforePasswordGeneratedEvent(System.Action)">
            <summary>Sets the callback action to be invoked before generating a password.</summary>
            <param name="action">The callback action.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetOnPasswordGenerationExceptionEvent(System.Action{System.Exception})">
            <summary>
            Sets the callback action to be invoked when an exception occurs during password generation.
            </summary>
            <param name="action">The callback action.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetOnPasswordResetEvent(System.Action)">
            <summary>Sets the callback action to be invoked when resetting the password.</summary>
            <param name="action">The callback action.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetResultLength(System.Int32)">
            <summary>Sets the length of the generated password.</summary>
            <param name="length">The length of the password.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Core.PasswordGenerator.SetShuffleTimes(System.Int32)">
            <summary>Sets the number of times the characters are shuffled during password generation.</summary>
            <param name="amount">The number of times to shuffle the characters.</param>
        </member>
        <member name="T:RandomPasswordGenerator.Core.RandomGeneratorOptions">
            <summary>Options for configuring the behavior of the random generator.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.AllowedSpecialCharacters">
            <summary>
            Gets or sets the string containing the allowed special characters for password generation.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.IncludeDigits">
            <summary>Gets or sets a value indicating whether to include digits in password generation.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.IncludeLetters">
            <summary>Gets or sets a value indicating whether to include letters in password generation.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.IncludeSpecialCharacters">
            <summary>
            Gets or sets a value indicating whether to include special characters in password generation.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.LetterCasing">
            <summary>Gets or sets the letter casing option for password generation.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.OnAfterPasswordGenerated">
            <summary>
            Gets or sets the callback action to be invoked after a password has been generated.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.OnBeforePasswordGenerated">
            <summary>Gets or sets the callback action to be invoked before generating a password.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.OnPasswordGenerationException">
            <summary>
            Gets or sets the callback action to be invoked when an exception occurs during password generation.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.OnPasswordReset">
            <summary>Gets or sets the callback action to be invoked when resetting the password.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.ResultLength">
            <summary>Gets or sets the length of the generated password.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Core.RandomGeneratorOptions.ShuffleTimes">
            <summary>
            Gets or sets the number of times the characters are shuffled during password generation.
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.RandomGeneratorOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> class.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Core.RandomGeneratorOptions.#ctor(RandomPasswordGenerator.Core.RandomGeneratorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> class based on
            another instance.
            </summary>
            <param name="other">
            The other <see cref="T:RandomPasswordGenerator.Core.RandomGeneratorOptions"/> instance to copy from.
            </param>
        </member>
        <member name="T:RandomPasswordGenerator.Forms.FrmGenerator">
            <summary>Represents a partial class for the password generator form.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Forms.FrmGenerator._canGenerate">
            <summary>
            Gets a value indicating whether the form is in a valid state to generate a password.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Forms.FrmGenerator._zoomFactorIntercept">
            <summary>
            Calculates and gets the intercept constant used in the linear equation when calculating
            the zoom factor of the result label's text.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Forms.FrmGenerator._zoomFactorSlope">
            <summary>
            Calculates and gets the slope constant used in the linear equation when calculating the
            zoom factor of the result label's text.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.DEFAULT_RESULT_LABEL_FONT_SIZE">
            <summary>The default font size for the result label.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.MAXIMUM_RESULT_ZOOM_FACTOR">
            <summary>The maximum zoom factor for the result label.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.MESSAGE_GENERATE_PASSWORD_FIRST">
            <summary>
            The message displayed when attempting to generate a password without selecting options.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.MESSAGE_INVALID_OPTIONS_STATE">
            <summary>The message displayed when the selected options state is invalid.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.MESSAGE_RESULT_TEXT_IDLE">
            <summary>The default idle message for the result label.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.MINIMUM_RESULT_ZOOM_FACTOR">
            <summary>The minimum zoom factor for the result label.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._failureColor">
            <summary>The color used to indicate failure.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._passwordGenerator">
            <summary>The password generator instance.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._primaryColor">
            <summary>The primary color used.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._successColor">
            <summary>The color used to indicate success.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._snackBarIdleCounter">
            <summary>The counter for the idle state of the snack bar.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator._snackBarTimerAction">
            <summary>The action associated with the snack bar timer.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.#ctor">
            <summary>Initializes a new instance of the FrmGenerator class.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.CasingOptionToTitle(ROCFramework_Core.Enums.LetterCasingOptions)">
            <summary>Converts the casing option to its corresponding title.</summary>
            <param name="selection">The casing option.</param>
            <returns>The title corresponding to the casing option.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.CasingTitleToEnumName(System.String)">
            <summary>Converts the casing title to its corresponding enum name.</summary>
            <param name="title">The casing title.</param>
            <returns>The enum name corresponding to the casing title.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.BtnGenerate_Click(System.Object,System.EventArgs)">
            <summary>Handles the click event of the Generate button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.BtnSelectSpecialCharacters_Click(System.Object,System.EventArgs)">
            <summary>Handles the click event of the special characters selector button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.BtnToClipboard_Click(System.Object,System.EventArgs)">
            <summary>Handles the click event of the Copy To Clipboard button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.BtnToClipboard_MouseHover(System.Object,System.EventArgs)">
            <summary>Handles the MouseHover event of the Copy To Clipboard button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.BtnToClipboard_MouseLeave(System.Object,System.EventArgs)">
            <summary>Handles the MouseLeave event of the Copy To Clipboard button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.CboLetterFormat_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>Handles the SelectedIndexChanged event of the Letter Format combo box.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ChkIncludeDigits_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Handles the CheckedChanged event of the Include Digits checkbox.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ChkIncludeLetters_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Handles the CheckedChanged event of the Include Letters checkbox.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ChkIncludeSpecialCharacters_CheckedChanged(System.Object,System.EventArgs)">
            <summary>Handles the CheckedChanged event of the Include Special Characters checkbox.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.FrmGenerator_Load(System.Object,System.EventArgs)">
            <summary>Handles the Load event of the FrmGenerator form.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.FrmGenerator_SizeChanged(System.Object,System.EventArgs)">
            <summary>Handles the SizeChanged event of the FrmGenerator form.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.LblResult_TextChanged(System.Object,System.EventArgs)">
            <summary>Handles the TextChanged event of the Result Label.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.LblSpecialChars_TextChanged(System.Object,System.EventArgs)">
            <summary>Handles the TextChanged event of the Special Characters Label.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.NudPasswordLength_ValueChanged(System.Object,System.EventArgs)">
            <summary>Handles the ValueChanged event of the Password Length NumericUpDown control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ResetControlsToDefault">
            <summary>Resets the form controls to their default values.</summary>
            <returns>True if the controls were successfully reset; otherwise, false.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ResetOptionsToDefault(System.Boolean)">
            <summary>Resets the password generator options to their default values.</summary>
            <param name="alsoResetControls">
            Specifies whether to also reset the form controls to their default values. Default is false.
            </param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ResetResultLabel">
            <summary>Resets the result label to its default state.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.SetPasswordLengthMinimum">
            <summary>
            Sets the minimum value for the password length NumericUpDown control based on the
            password generator's minimum length.
            </summary>
            <returns>The minimum value for the password length.</returns>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.SetResultLabelFontSize">
            <summary>
            <para>
            Sets the size of the result label font using a linear equation to calculate its proper
            size, based on the label's dimesions and text length.
            </para>
            <h4>Other members involved:</h4><br/><seealso cref="P:RandomPasswordGenerator.Forms.FrmGenerator._zoomFactorIntercept"/><br/><seealso cref="P:RandomPasswordGenerator.Forms.FrmGenerator._zoomFactorSlope"/>
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.SetSnackbar">
            <summary>Sets the position of the snackbar control.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.ShowSnackbar(System.String)">
            <summary>Displays a snackbar with the specified message.</summary>
            <param name="message">The message to display in the snackbar.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.SnackTimer_Tick(System.Object,System.EventArgs)">
            <summary>Handles the Tick event of the SnackTimer control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The EventArgs instance containing the event data.</param>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmGenerator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmGenerator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:RandomPasswordGenerator.Forms.FrmSelectCharacters">
            <summary>Represents a form for selecting characters.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Forms.FrmSelectCharacters.SelectedCharacters">
            <summary>Gets the selected characters as a string.</summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmSelectCharacters._baseCharacters">
            <summary>
            Gets or sets the base characters. These represent all the possible special characters to
            select from, so it's used to fill the selector's list.
            </summary>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmSelectCharacters._selectedCharacters">
            <summary>Gets or sets the selected characters. These represent the user's selection.</summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Forms.FrmSelectCharacters"/> class with base and
            selected characters as strings.
            </summary>
            <param name="baseCharacters">The base characters.</param>
            <param name="selectedCharacters">The selected characters.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.#ctor(System.Char[],System.Char[])">
            <summary>
            Initializes a new instance of the <see cref="T:RandomPasswordGenerator.Forms.FrmSelectCharacters"/> class with base and
            selected characters as arrays.
            </summary>
            <param name="baseCharacters">The base characters.</param>
            <param name="selectedCharacters">The selected characters.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.BtnSave_Click(System.Object,System.EventArgs)">
            <summary>Handles the Click event of the Save button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.BtnSelectAll_Click(System.Object,System.EventArgs)">
            <summary>Handles the Click event of the Select All button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.BtnSelectNone_Click(System.Object,System.EventArgs)">
            <summary>Handles the Click event of the Select None button.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.FrmSelectCharacters_Load(System.Object,System.EventArgs)">
            <summary>Handles the Load event of the FrmSelectCharacters form.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:RandomPasswordGenerator.Forms.FrmSelectCharacters.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:RandomPasswordGenerator.Forms.FrmSelectCharacters.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Program.ApplicationInfo">
            <summary>Holds application metadata information.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Program.FontCollection">
            <summary>Manages private and custom fonts.</summary>
        </member>
        <member name="P:RandomPasswordGenerator.Program.RegistryKeys">
            <summary>
            Manages the application settings values reading and writing to/from the registry.
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.Program.Main">
            <summary>The main entry point for the application.</summary>
        </member>
        <member name="T:RandomPasswordGenerator.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.AppIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.AppIcon_v5_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.AppIcon_v5_256">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.AppIcon_v5_512">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.AppIcon_v5_64">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.Hack_Bold">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.Hack_BoldItalic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.Hack_Italic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:RandomPasswordGenerator.Properties.Resources.Hack_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:RandomPasswordGenerator.ApplicationConfiguration">
            <summary>
             Bootstrap the application configuration.
            </summary>
        </member>
        <member name="M:RandomPasswordGenerator.ApplicationConfiguration.Initialize">
            <summary>
             Bootstrap the application as follows:
             <code>
             global::System.Windows.Forms.Application.EnableVisualStyles();
             global::System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(false);
             global::System.Windows.Forms.Application.SetHighDpiMode(HighDpiMode.SystemAware);
            </code>
            </summary>
        </member>
    </members>
</doc>
